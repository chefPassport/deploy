{"ast":null,"code":"var _jsxFileName = \"/Users/matthewcebenka/Documents/git/deploy/src/components/Profile.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { getChefRecipes } from '../actions/chefActions';\nimport Axios from 'axios';\nimport axiosWithAuth from '../utils/axiosWithAuth'; // material-UI\n\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport \"../index.css\"; // components\n\nimport NavBar from \"./NavBar\";\nimport ProfileModal from \"./profile/ProfileModal\";\nimport EditModal from \"./profile/EditModal\";\nimport Footer from \"./Footer\";\nimport TextFalse from './profile/conditionalComponents/ternaryTextFalse';\nimport TextTrue from './profile/conditionalComponents/ternaryTextTrue';\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6)\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4)\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\" // 16:9\n\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6)\n  }\n}));\n\nconst Profile = ({\n  getChefRecipes,\n  chefId,\n  chefRecipes\n}) => {\n  const classes = useStyles();\n  const [profileInfo, setProfileInfo] = useState('false');\n  const [chefInfo, setChefInfo] = useState([]);\n\n  const deleteRecipe = (recipeID, chefId) => {\n    axiosWithAuth().delete(`https://simmr.herokuapp.com/api/chefs/${chefId}/recipes/${recipeID}`).then(res => {\n      console.log('Recipe was DELETED', res);\n    }).catch(err => {\n      console.log('could not delete recipe', err);\n    });\n    getChefRecipes(chefId);\n  };\n\n  const conditionalRender = () => {\n    if (chefRecipes.length > 0) {\n      setProfileInfo(true);\n      setChefInfo([chefRecipes[0].name, chefRecipes[0].location, chefRecipes[0].contact_info]);\n    } else {\n      setProfileInfo(false);\n    }\n  };\n\n  useEffect(() => {\n    conditionalRender();\n  }, [chefRecipes]);\n  return React.createElement(\"div\", {\n    className: \"logInAnimation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.heroContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Container, {\n    maxWidth: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, profileInfo ? React.createElement(TextTrue, {\n    chefInfo: chefInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }) : React.createElement(TextFalse, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.heroButtons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(ProfileModal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })))))), React.createElement(Container, {\n    className: classes.cardGrid,\n    maxWidth: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, chefRecipes.map(recipe => React.createElement(Grid, {\n    item: true,\n    key: recipe.id,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    className: classes.cardMedia,\n    image: \"https://source.unsplash.com/random\",\n    title: \"Image title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    className: classes.cardContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, recipe.recipe_title), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, recipe.meal_type)), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(EditModal, {\n    recipe: recipe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    type: \"button\",\n    color: \"secondary\",\n    onClick: () => deleteRecipe(recipe.id, chefId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Delete\"))))))))), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    chefId: state.chefReducer.chef.id,\n    chefRecipes: state.chefReducer.chef.recipes\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getChefRecipes\n})(Profile);","map":{"version":3,"sources":["/Users/matthewcebenka/Documents/git/deploy/src/components/Profile.js"],"names":["React","useState","useEffect","connect","getChefRecipes","Axios","axiosWithAuth","Button","Card","CardActions","CardContent","CardMedia","CssBaseline","Grid","Typography","makeStyles","Container","NavBar","ProfileModal","EditModal","Footer","TextFalse","TextTrue","useStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","Profile","chefId","chefRecipes","classes","profileInfo","setProfileInfo","chefInfo","setChefInfo","deleteRecipe","recipeID","delete","then","res","console","log","catch","err","conditionalRender","length","name","location","contact_info","map","recipe","id","recipe_title","meal_type","mapStateToProps","state","chefReducer","chef","recipes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { getChefRecipes } from '../actions/chefActions';\nimport Axios from 'axios';\nimport axiosWithAuth from '../utils/axiosWithAuth';\n// material-UI\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport \"../index.css\";\n// components\nimport NavBar from \"./NavBar\";\nimport ProfileModal from \"./profile/ProfileModal\";\nimport EditModal from \"./profile/EditModal\";\nimport Footer from \"./Footer\";\nimport TextFalse from './profile/conditionalComponents/ternaryTextFalse';\nimport TextTrue from './profile/conditionalComponents/ternaryTextTrue'\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6)\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4)\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\" // 16:9\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6)\n  }\n}));\n\n\n\nconst Profile = ({getChefRecipes, chefId, chefRecipes}) => {\n  const classes = useStyles();\n  const [ profileInfo, setProfileInfo ] = useState('false')\n  const [ chefInfo, setChefInfo ] = useState([])\n\n  const deleteRecipe = (recipeID, chefId) => {\n    axiosWithAuth()\n        .delete(`https://simmr.herokuapp.com/api/chefs/${chefId}/recipes/${recipeID}`)\n        .then(res => {\n            console.log('Recipe was DELETED', res)\n        })\n        .catch(err => {\n            console.log('could not delete recipe', err)\n        })\n    getChefRecipes(chefId);\n  };\n\n  const conditionalRender = () => {\n    if(chefRecipes.length > 0){\n      setProfileInfo(true)\n      setChefInfo([chefRecipes[0].name, chefRecipes[0].location, chefRecipes[0].contact_info]);\n    } else {\n      setProfileInfo(false)\n      \n    }\n  };\n\n  useEffect(() => {\n    conditionalRender();\n  }, [chefRecipes])\n  \n\n\n  return (\n    <div className=\"logInAnimation\">\n      <React.Fragment>\n        <CssBaseline />\n        <NavBar />\n        <main>\n          <div className={classes.heroContent}>\n            <Container maxWidth=\"sm\">\n              {/* <Typography\n                component=\"h1\"\n                variant=\"h2\"\n                align=\"center\"\n                color=\"textPrimary\"\n                gutterBottom\n              > */}\n                {profileInfo ? <TextTrue  chefInfo={chefInfo}/> : <TextFalse />}\n              {/* </Typography>\n              <Typography\n                variant=\"h5\"\n                align=\"center\"\n                color=\"textSecondary\"\n                paragraph\n              >\n                Location: {}\n              </Typography>\n              <Typography\n                variant=\"h5\"\n                align=\"center\"\n                color=\"textSecondary\"\n                paragraph\n              >\n                Contact: {}\n              </Typography> */}\n              <div className={classes.heroButtons}>\n                <Grid container spacing={2} justify=\"center\">\n                  <Grid item>\n                    <ProfileModal />\n                  </Grid>\n                </Grid>\n              </div>\n            </Container>\n          </div>\n          <Container className={classes.cardGrid} maxWidth=\"md\">\n            <Grid container spacing={4}>\n              {/* RECIPE CARDS BEING MAPPED */}\n              {chefRecipes.map(recipe => (\n                <Grid item key={recipe.id} xs={12} sm={6} md={4}>\n                  <div className=\"card\">\n                    <Card className={classes.card}>\n                      <CardMedia\n                        className={classes.cardMedia}\n                        image=\"https://source.unsplash.com/random\"\n                        title=\"Image title\"\n                      />\n                      <CardContent className={classes.cardContent}>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                          {recipe.recipe_title}\n                        </Typography>\n                        <Typography>\n                          {recipe.meal_type}\n                        </Typography>\n                      </CardContent>\n                      <CardActions>\n                        <EditModal recipe={recipe}/>\n                        <Button\n                          variant=\"contained\"\n                          type=\"button\"\n                          color=\"secondary\"\n                          onClick={() => deleteRecipe(recipe.id, chefId)}\n                        >\n                          Delete\n                        </Button>\n                      </CardActions>\n                    </Card>\n                  </div>\n                </Grid>\n              ))}\n              {/* END OF RECIPE CARDS BEING MAPPED */}\n            </Grid>\n          </Container>\n        </main>\n        <Footer />\n      </React.Fragment>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      chefId: state.chefReducer.chef.id,\n      chefRecipes: state.chefReducer.chef.recipes\n  }\n}\n\nexport default connect(mapStateToProps, {getChefRecipes})(Profile)\n\n"]},"metadata":{},"sourceType":"module"}